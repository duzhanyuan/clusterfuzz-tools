- name: Setup the instance on GCE
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: Create storage disk
      gce_pd:
        disk_type: pd-ssd
        zone: "us-central1-a"
        project_id: "981641712411"
        size_gb: 100
        image: ubuntu-1404
        name: "{{ machine }}-ci-boot"
        state: present
        service_account_email: "ci-round-2@clusterfuzz-tools.iam.gserviceaccount.com"
        credentials_file: "/auto/FuzzInfrastructure/clusterfuzz-tools/clusterfuzz-tools-ci-credentials.json"
    - name: Create the instance
      gce:
        disks:
          - name: "{{ machine }}-ci-boot"
            mode: READ_WRITE
        instance_names: "{{ machine }}-ci"
        machine_type: n1-standard-64
        service_account_email: "ci-round-2@clusterfuzz-tools.iam.gserviceaccount.com"
        credentials_file: "/auto/FuzzInfrastructure/clusterfuzz-tools/clusterfuzz-tools-ci-credentials.json"
        project_id: "981641712411"
        zone: "us-central1-a"
      register: gce
    - name: Wait for SSH to come up
      wait_for: host={{ gce.instance_data[0].public_ip }}
                port=22
                timeout=60
    - name: Add host to groupname
      add_host: hostname={{ gce.instance_data[0].public_ip }}
                groupname=continuous-integration-instances
- name: Configure users and dependencies
  hosts: continuous-integration-instances
  connection: ssh
  become: true
  tasks:
    - group:
        name: clusterfuzz
        state: present
    - name: Allow clusterfuzz group to have passwordless sudo
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^%clusterfuzz'
        line: '%clusterfuzz ALL=(ALL) NOPASSWD: ALL'
    - name: Set release type environment variable
      lineinfile:
        dest: /etc/environment
        state: present
        regexp: 'RELEASE="([a-z])\w+"'
        line: 'RELEASE="{{ release }}"'
    - user:
        name: clusterfuzz
        state: present
        groups: clusterfuzz
        shell: /bin/bash
    - apt:
        update_cache: yes
    - pam_limits: domain=* limit_type={{item}} limit_item=nofile value=1000000
      with_items:
        - hard
        - soft
    - apt: name={{item}} state=latest
      with_items:
        - python-dev
        - python-pip
        - runit
        - git
        - pkg-config
        - blackbox
        - unzip
        - libssl-dev
        - openjdk-7-jdk
        - libffi-dev
    - name: Upgrade PIP
      pip: name={{item}} state=latest
      with_items:
        - pip
        - oauth2client
        - httplib2
        - pyyaml
        - crcmod
        - requests[security]
        - py_lru_cache
- name: Setup python-daemon (runit service, folder, log folder, and service)
  hosts: continuous-integration-instances
  connection: ssh
  become: true
  tasks:
    - shell: "sv stop python-daemon"
    - file: path="{{item}}"
            state=directory
            owner=clusterfuzz
            group=clusterfuzz
            mode='u=rwx,g=rx,o=rx'
      with_items:
        - '/python-daemon'
    - file: path="{{item}}"
            state=directory
            owner=root
            group=root
            mode='u=rwx,g=rwx,o=rwx'
      with_items:
        - '/etc/sv/python-daemon'
        - '/etc/sv/python-daemon/log'
        - '/var/log/python-daemon'
        - '/home/clusterfuzz/.clusterfuzz'
    - copy: src={{item.src}}
            dest={{item.dest}}
            force=true
            owner=root
            group=root
            mode='u=rwx,g=rwx,o=rwx'
      with_items:
        - {'src': 'python_daemon/run', 'dest': '/etc/sv/python-daemon/run'}
        - {'src': 'python_daemon/log_run', 'dest': '/etc/sv/python-daemon/log/run'}
        - {'src': 'continuous_integration/daemon', 'dest': '/python-daemon'}
        - {'src': '/auto/FuzzInfrastructure/clusterfuzz-tools/clusterfuzz-tools-ci-credentials.json', 'dest': '/python-daemon/service-account-credentials.json'}
        - {'src': '/auto/FuzzInfrastructure/clusterfuzz-tools/goma', 'dest': '/home/clusterfuzz'}
    - copy:
        src: '/google/data/ro/teams/clusterfuzz-tools/releases/clusterfuzz-rc'
        dest: '/python-daemon/clusterfuzz'
        force: true
        owner: root
        group: root
        mode:  'u=rwx,g=rwx,o=rwx'
      when: release == "release-candidate"
    - copy:
        src: '/google/data/ro/teams/clusterfuzz-tools/releases/clusterfuzz'
        dest: '/python-daemon/clusterfuzz'
        force: true
        owner: root
        group: root
        mode:  'u=rwx,g=rwx,o=rwx'
      when: release == "release"
    - file:
        src: '{{ item.src }}'
        dest: '{{ item.dest }}'
        state: link
        mode: 'u=rwx,g=rwx,o=rwx'
      with_items:
        - { src: '/etc/sv/python-daemon', dest: '/etc/service/python-daemon' }
    - pause:
        seconds: 1
        prompt: Waiting 1 second for the server to acknowledge the CI service
    - shell: "sv start python-daemon"
